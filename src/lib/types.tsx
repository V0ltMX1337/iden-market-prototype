export interface User {
  id: string;
  login: string;
  email: string;
  phone: string;
  password: string;
  registrationDate: string;
  firstName: string;
  lastName: string;
  city: City;
  role: UserRole;
  status: UserStatus;
  photoUrl: string;
  balance: number;           // üí∞ –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  reservedBalance: number;   // üîí –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞
  tgid: number;
  tgUrl: string;
  description?: string;      // üìù –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bannerUrl?: string;        // üñºÔ∏è –°—Å—ã–ª–∫–∞ –Ω–∞ –±–∞–Ω–Ω–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è
}

export enum UserRole {
  USER = "USER",
  MODERATOR = "MODERATOR",
  ADMINISTRATOR = "ADMINISTRATOR",
}

export enum UserStatus {
  ACTIVE = "ACTIVE",
  BLOCKED = "BLOCKED",
}

export interface UserDisplayData {
  user: User;
  averageRating: number;
  reviewCount: number;
  joinDate: string;
  responseTime: string;
  deliveryCount: number;
  salesCount: number;
}

export interface AdWithStatus extends Ad {
  isDeliveryAvailable: boolean;
  isFavorite: boolean;
  formattedPrice: string;
  location: string;
  date: string;
  image: string;
} 

export interface AdFilter {
  filterId: string;
  value: string;
}


export interface FilterDefinition {
  options: any;
  id: string;
  name: string;
  values: string[];
  type: FilterType;
}

export enum FilterType {
  SELECT = "SELECT",
  CHECKBOX = "CHECKBOX",
  RANGE = "RANGE",
}

export interface FilterAssignment {
  filterId: string;
  required: boolean;
}


export interface Subcategory {
  id: string;
  name: string;
  slug: string;
  items: string[];
  children?: Subcategory[];  // —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  filters: FilterAssignment[]; // ‚úÖ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
}

export interface Category {
  id: string;
  name: string;
  slug: string;
  icon: string;
  subcategories: Subcategory[];
}


export interface City {
  id: string;
  name: string;
  region: string;
}

export interface Ad {
  id: string;
  title: string;
  description: string;
  price: number;
  city: City;
  fullAdress: string;
  latitude: number;
  longitude: number;
  links: string[];
  views: number;
  favoritesCount: number;
  publishedAt: string;
  userId: string;
  adStatus: AdStatus;
  adSold: AdSold;
  categoryId: string;       // ‚úÖ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  subcategoryId: string;  // ‚úÖ id –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  filters: AdFilter[];
}

export enum AdStatus {
  ACTIVE = "ACTIVE",
  BLOCKED = "BLOCKED",
  SOLD = "SOLD",
  TIME_OUT = "TIME_OUT",
}

export enum AdSold {
  NEW = "NEW",
  OTLICHNOE = "OTLICHNOE",
  XOROSHEE = "XOROSHEE",
  YDVORITEL = "YDVORITEL",
}


export interface Review {
  id: string;
  fromUser: User;       // üë§ –ö—Ç–æ –æ—Å—Ç–∞–≤–∏–ª –æ—Ç–∑—ã–≤
  ad: Ad;               // üìå –ö –∫–∞–∫–æ–º—É –æ–±—ä—è–≤–ª–µ–Ω–∏—é –æ—Ç–Ω–æ—Å–∏—Ç—Å—è
  rating: number;       // üåü –†–µ–π—Ç–∏–Ω–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 1 –¥–æ 5)
  comment: string;      // üí¨ –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
  createdAt: string;    // üïí –ö–æ–≥–¥–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω
}

export interface Message {
  id: string;
  adId: string;
  senderId: string;
  receiverId: string;
  content: string;
  timestamp: string;
  isRead?: boolean;
}

export interface ChatSummary {
  adId: string;
  otherUserId: string;        // —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –≤ —á–∞—Ç–µ
  lastMessage: string;
  lastTimestamp: string;
}

export interface SystemSettings {
  siteName: string;
  siteDescription: string;
  seoTitle: string;
  seoDescription: string;

  adTitle: string;             // —à–∞–±–ª–æ–Ω –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  userProfile: string;         // —à–∞–±–ª–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  categoryTitle: string;       // —à–∞–±–ª–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

  mainPageTitle: string;

  authTitle: string;           // —à–∞–±–ª–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞
  registerTitle: string;       // —à–∞–±–ª–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

  profileMain: string;         // —à–∞–±–ª–æ–Ω: –ì–ª–∞–≤–Ω–∞—è (–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç)
  profileAds: string;          // —à–∞–±–ª–æ–Ω: –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  profileMessages: string;     // —à–∞–±–ª–æ–Ω: –°–æ–æ–±—â–µ–Ω–∏—è
  profileFavorites: string;    // —à–∞–±–ª–æ–Ω: –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
  profileGame: string;         // —à–∞–±–ª–æ–Ω: –ò–≥—Ä–∞
  profileSettings: string;     // —à–∞–±–ª–æ–Ω: –ù–∞—Å—Ç—Ä–æ–π–∫–∏
  profileNewAd: string;        // —à–∞–±–ª–æ–Ω: –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ

  commission: number;
}

export type Track = {
  id: string;
  title: string;
  musicUrl: string;
  coverUrl?: string;
  uploadTime: string;
  musicFilename: string;
};

export interface Video {
  id?: string; // –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å UUID –∏–ª–∏ –¥—Ä—É–≥–∏–µ ID
  title: string;
  videoUrl: string;
  videoFilename: string;
  uploadTime: string; // ISO-—Å—Ç—Ä–æ–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
  thumbnailUrl?: string; // –µ—Å–ª–∏ backend —É–º–µ–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –æ–±–ª–æ–∂–∫—É
  sourceUrl?: string; // –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ (YouTube/VK)
  duration?: number; // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  format?: string; // –Ω–∞–ø—Ä–∏–º–µ—Ä, mp4
}