import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Helmet } from 'react-helmet';
import Icon from '@/components/ui/icon';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent } from '@/components/ui/card';
import { Avatar } from '@/components/ui/avatar';
import { Badge } from '@/components/ui/badge';

interface Message {
  id: number;
  avatar: string;
  name: string;
  lastMessage: string;
  time: string;
  unread?: number;
  online?: boolean;
}

interface Ad {
  id: number;
  title: string;
  price: string;
  image: string;
  location: string;
  time: string;
}

const NewPage = () => {
  const navigate = useNavigate();
  const [isAuth, setIsAuth] = useState(false);
  const [activeTab, setActiveTab] = useState<'feed' | 'messages' | 'ads' | 'taxi' | 'music'>('feed');
  const [showAuthModal, setShowAuthModal] = useState(false);

  const mockMessages: Message[] = [
    { id: 1, avatar: 'üë§', name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ò–≤–∞–Ω–æ–≤', lastMessage: '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?', time: '14:30', unread: 3, online: true },
    { id: 2, avatar: 'üë§', name: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞', lastMessage: '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!', time: '13:15', online: true },
    { id: 3, avatar: 'üë§', name: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤', lastMessage: '–í—Å—Ç—Ä–µ—Ç–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞?', time: '12:00', unread: 1 },
    { id: 4, avatar: 'üë§', name: '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞', lastMessage: '–û—Ç–ª–∏—á–Ω–æ, –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å', time: '–í—á–µ—Ä–∞' },
    { id: 5, avatar: 'üë§', name: '–ò–≥–æ—Ä—å –°–º–∏—Ä–Ω–æ–≤', lastMessage: '–û—Ç–ø—Ä–∞–≤–∏–ª –¥–æ–∫—É–º–µ–Ω—Ç—ã', time: '–í—á–µ—Ä–∞', online: true },
  ];

  const mockAds: Ad[] = [
    { id: 1, title: 'iPhone 15 Pro Max 256GB', price: '89 990 ‚ÇΩ', image: 'üì±', location: '–ú–æ—Å–∫–≤–∞', time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥' },
    { id: 2, title: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ 2-–∫ 65–º¬≤', price: '12 500 000 ‚ÇΩ', image: 'üè†', location: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', time: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥' },
    { id: 3, title: 'Toyota Camry 2020', price: '2 450 000 ‚ÇΩ', image: 'üöó', location: '–ú–æ—Å–∫–≤–∞', time: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥' },
    { id: 4, title: 'MacBook Pro M3', price: '159 990 ‚ÇΩ', image: 'üíª', location: '–ö–∞–∑–∞–Ω—å', time: '2 –¥–Ω—è –Ω–∞–∑–∞–¥' },
    { id: 5, title: '–î–∏–≤–∞–Ω —É–≥–ª–æ–≤–æ–π', price: '45 000 ‚ÇΩ', image: 'üõãÔ∏è', location: '–ú–æ—Å–∫–≤–∞', time: '3 –¥–Ω—è –Ω–∞–∑–∞–¥' },
    { id: 6, title: 'PlayStation 5', price: '49 990 ‚ÇΩ', image: 'üéÆ', location: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', time: '4 –¥–Ω—è –Ω–∞–∑–∞–¥' },
  ];

  const handleTrivoidAuth = () => {
    setShowAuthModal(false);
    setIsAuth(true);
  };

  if (!isAuth) {
    return (
      <>
        <Helmet>
          <title>–ú–æ—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ ‚Äî –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä, –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–∞–∫—Å–∏</title>
          <meta name="description" content="–ï–¥–∏–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è, –ø–æ–∫—É–ø–æ–∫ –∏ –∑–∞–∫–∞–∑–∞ —Ç–∞–∫—Å–∏" />
        </Helmet>

        <div className="min-h-screen bg-gradient-to-br from-blue-600 via-indigo-600 to-purple-700">
          <div className="container mx-auto px-4 py-16">
            <div className="max-w-6xl mx-auto">
              <div className="text-center mb-16">
                <div className="inline-block bg-white/10 backdrop-blur-lg rounded-3xl p-6 mb-8">
                  <Icon name="Zap" size={80} className="text-white mx-auto" />
                </div>
                <h1 className="text-5xl md:text-7xl font-bold text-white mb-6">
                  –í—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ
                </h1>
                <p className="text-xl md:text-2xl text-blue-100 mb-8 max-w-3xl mx-auto">
                  –û–±—â–∞–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏, –ø–æ–∫—É–ø–∞–π –∏ –ø—Ä–æ–¥–∞–≤–∞–π, –∑–∞–∫–∞–∑—ã–≤–∞–π —Ç–∞–∫—Å–∏, —Å–ª—É—à–∞–π –º—É–∑—ã–∫—É ‚Äî –≤—Å—ë –Ω–∞ –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
                </p>
                <Button
                  onClick={() => setShowAuthModal(true)}
                  className="bg-white text-blue-600 hover:bg-blue-50 px-12 py-6 text-xl font-bold rounded-2xl shadow-2xl transform hover:scale-105 transition-all"
                >
                  –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Trivoid
                </Button>
              </div>

              <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16">
                {[
                  { icon: 'MessageCircle', title: '–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä', desc: '–û–±—â–∞–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏', color: 'from-blue-500 to-cyan-500' },
                  { icon: 'ShoppingBag', title: '–û–±—ä—è–≤–ª–µ–Ω–∏—è', desc: '–ü–æ–∫—É–ø–∞–π –∏ –ø—Ä–æ–¥–∞–≤–∞–π –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–π', color: 'from-green-500 to-emerald-500' },
                  { icon: 'Car', title: '–¢–∞–∫—Å–∏', desc: '–ó–∞–∫–∞–∑—ã–≤–∞–π –ø–æ–µ–∑–¥–∫–∏ –≤—ã–≥–æ–¥–Ω–æ', color: 'from-yellow-500 to-orange-500' },
                  { icon: 'Music', title: '–ú—É–∑—ã–∫–∞', desc: '–°–ª—É—à–∞–π –ª—é–±–∏–º—ã–µ —Ç—Ä–µ–∫–∏', color: 'from-pink-500 to-rose-500' },
                ].map((feature, index) => (
                  <div key={index} className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 hover:bg-white/20 transition-all">
                    <div className={`w-16 h-16 bg-gradient-to-br ${feature.color} rounded-2xl flex items-center justify-center mb-4`}>
                      <Icon name={feature.icon as any} size={32} className="text-white" />
                    </div>
                    <h3 className="text-xl font-bold text-white mb-2">{feature.title}</h3>
                    <p className="text-blue-100 text-sm">{feature.desc}</p>
                  </div>
                ))}
              </div>

              <div className="grid md:grid-cols-3 gap-8 text-center">
                {[
                  { number: '5M+', label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' },
                  { number: '100K+', label: '–û–±—ä—è–≤–ª–µ–Ω–∏–π' },
                  { number: '1M+', label: '–ü–æ–µ–∑–¥–æ–∫ –≤ –º–µ—Å—è—Ü' },
                ].map((stat, index) => (
                  <div key={index} className="bg-white/10 backdrop-blur-lg rounded-2xl p-8 border border-white/20">
                    <div className="text-4xl md:text-5xl font-bold text-white mb-2">{stat.number}</div>
                    <div className="text-blue-100">{stat.label}</div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {showAuthModal && (
            <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4">
              <div className="bg-white rounded-3xl max-w-md w-full p-8 relative">
                <button
                  onClick={() => setShowAuthModal(false)}
                  className="absolute top-4 right-4 text-gray-400 hover:text-gray-600"
                >
                  <Icon name="X" size={24} />
                </button>
                
                <div className="text-center mb-6">
                  <div className="w-20 h-20 bg-gradient-to-br from-blue-600 to-indigo-600 rounded-full flex items-center justify-center mx-auto mb-4">
                    <Icon name="Zap" size={40} className="text-white" />
                  </div>
                  <h2 className="text-2xl font-bold text-gray-900 mb-2">–í—Ö–æ–¥ —á–µ—Ä–µ–∑ Trivoid</h2>
                  <p className="text-gray-600">–ë—ã—Å—Ç—Ä–∞—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</p>
                </div>

                <Button
                  onClick={handleTrivoidAuth}
                  className="w-full bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white py-4 rounded-xl font-semibold text-lg mb-4"
                >
                  <Icon name="LogIn" size={20} className="mr-2" />
                  –í–æ–π—Ç–∏ —Å Trivoid
                </Button>

                <p className="text-xs text-gray-500 text-center">
                  –ù–∞–∂–∏–º–∞—è "–í–æ–π—Ç–∏", –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                </p>
              </div>
            </div>
          )}
        </div>
      </>
    );
  }

  return (
    <>
      <Helmet>
        <title>–ú–æ—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ ‚Äî –ì–ª–∞–≤–Ω–∞—è</title>
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        <header className="bg-white border-b border-gray-200 sticky top-0 z-40">
          <div className="container mx-auto px-4">
            <div className="flex items-center justify-between h-16">
              <div className="flex items-center gap-8">
                <div className="flex items-center gap-2">
                  <div className="w-10 h-10 bg-gradient-to-br from-blue-600 to-indigo-600 rounded-xl flex items-center justify-center">
                    <Icon name="Zap" size={24} className="text-white" />
                  </div>
                  <span className="text-xl font-bold text-gray-900">MyPlatform</span>
                </div>

                <div className="hidden md:block w-96">
                  <div className="relative">
                    <Icon name="Search" size={20} className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" />
                    <Input
                      placeholder="–ü–æ–∏—Å–∫..."
                      className="pl-10 bg-gray-100 border-0 focus:bg-white"
                    />
                  </div>
                </div>
              </div>

              <div className="flex items-center gap-4">
                <button className="relative p-2 hover:bg-gray-100 rounded-lg">
                  <Icon name="Bell" size={24} className="text-gray-600" />
                  <span className="absolute top-1 right-1 w-2 h-2 bg-red-500 rounded-full"></span>
                </button>
                <Avatar className="w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-500 text-white flex items-center justify-center font-semibold">
                  –ò
                </Avatar>
              </div>
            </div>
          </div>
        </header>

        <div className="flex">
          <aside className="hidden md:block w-64 bg-white border-r border-gray-200 h-[calc(100vh-64px)] sticky top-16">
            <nav className="p-4 space-y-2">
              {[
                { id: 'feed', icon: 'Home', label: '–õ–µ–Ω—Ç–∞', badge: null },
                { id: 'messages', icon: 'MessageCircle', label: '–°–æ–æ–±—â–µ–Ω–∏—è', badge: 5 },
                { id: 'ads', icon: 'ShoppingBag', label: '–û–±—ä—è–≤–ª–µ–Ω–∏—è', badge: null },
                { id: 'taxi', icon: 'Car', label: '–¢–∞–∫—Å–∏', badge: null },
                { id: 'music', icon: 'Music', label: '–ú—É–∑—ã–∫–∞', badge: null },
              ].map((item) => (
                <button
                  key={item.id}
                  onClick={() => setActiveTab(item.id as any)}
                  className={`w-full flex items-center justify-between px-4 py-3 rounded-xl font-medium transition-all ${
                    activeTab === item.id
                      ? 'bg-blue-50 text-blue-600'
                      : 'text-gray-700 hover:bg-gray-100'
                  }`}
                >
                  <div className="flex items-center gap-3">
                    <Icon name={item.icon as any} size={22} />
                    <span>{item.label}</span>
                  </div>
                  {item.badge && (
                    <Badge className="bg-red-500 text-white">{item.badge}</Badge>
                  )}
                </button>
              ))}
            </nav>
          </aside>

          <main className="flex-1">
            {activeTab === 'feed' && (
              <div className="max-w-3xl mx-auto p-4 space-y-4">
                <Card>
                  <CardContent className="p-4">
                    <div className="flex items-center gap-3 mb-4">
                      <Avatar className="w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-500 text-white flex items-center justify-center font-semibold">
                        –ò
                      </Avatar>
                      <Input placeholder="–ß—Ç–æ —É –≤–∞—Å –Ω–æ–≤–æ–≥–æ?" className="flex-1" />
                    </div>
                    <div className="flex gap-4">
                      <Button variant="ghost" size="sm" className="flex-1">
                        <Icon name="Image" size={18} className="mr-2" />
                        –§–æ—Ç–æ
                      </Button>
                      <Button variant="ghost" size="sm" className="flex-1">
                        <Icon name="Video" size={18} className="mr-2" />
                        –í–∏–¥–µ–æ
                      </Button>
                      <Button variant="ghost" size="sm" className="flex-1">
                        <Icon name="Music" size={18} className="mr-2" />
                        –ú—É–∑—ã–∫–∞
                      </Button>
                    </div>
                  </CardContent>
                </Card>

                {[1, 2, 3].map((post) => (
                  <Card key={post}>
                    <CardContent className="p-4">
                      <div className="flex items-center gap-3 mb-4">
                        <Avatar className="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 text-white flex items-center justify-center">
                          –ü
                        </Avatar>
                        <div>
                          <div className="font-semibold">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {post}</div>
                          <div className="text-xs text-gray-500">2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</div>
                        </div>
                      </div>
                      <p className="mb-4 text-gray-800">
                        –û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏! ‚òÄÔ∏è –ü–æ–≥–æ–¥–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è.
                      </p>
                      <div className="bg-gray-100 h-64 rounded-xl mb-4 flex items-center justify-center">
                        <Icon name="Image" size={48} className="text-gray-400" />
                      </div>
                      <div className="flex items-center gap-6 text-gray-600">
                        <button className="flex items-center gap-2 hover:text-red-500 transition-colors">
                          <Icon name="Heart" size={20} />
                          <span>124</span>
                        </button>
                        <button className="flex items-center gap-2 hover:text-blue-500 transition-colors">
                          <Icon name="MessageCircle" size={20} />
                          <span>18</span>
                        </button>
                        <button className="flex items-center gap-2 hover:text-green-500 transition-colors">
                          <Icon name="Share2" size={20} />
                          <span>5</span>
                        </button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            )}

            {activeTab === 'messages' && (
              <div className="h-[calc(100vh-64px)] flex">
                <div className="w-80 border-r border-gray-200 bg-white">
                  <div className="p-4 border-b">
                    <Input placeholder="–ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π..." />
                  </div>
                  <div className="overflow-y-auto">
                    {mockMessages.map((msg) => (
                      <div
                        key={msg.id}
                        className="p-4 hover:bg-gray-50 cursor-pointer border-b border-gray-100 transition-colors"
                      >
                        <div className="flex items-center gap-3">
                          <div className="relative">
                            <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-500 rounded-full flex items-center justify-center text-white text-lg">
                              {msg.avatar}
                            </div>
                            {msg.online && (
                              <span className="absolute bottom-0 right-0 w-3 h-3 bg-green-500 border-2 border-white rounded-full"></span>
                            )}
                          </div>
                          <div className="flex-1 min-w-0">
                            <div className="flex items-center justify-between mb-1">
                              <span className="font-semibold text-sm truncate">{msg.name}</span>
                              <span className="text-xs text-gray-500">{msg.time}</span>
                            </div>
                            <div className="flex items-center justify-between">
                              <p className="text-sm text-gray-600 truncate">{msg.lastMessage}</p>
                              {msg.unread && (
                                <Badge className="bg-blue-600 text-white text-xs">{msg.unread}</Badge>
                              )}
                            </div>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="flex-1 flex flex-col bg-gray-50">
                  <div className="flex items-center gap-3 p-4 bg-white border-b">
                    <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-500 rounded-full flex items-center justify-center text-white">
                      üë§
                    </div>
                    <div>
                      <div className="font-semibold">–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ò–≤–∞–Ω–æ–≤</div>
                      <div className="text-xs text-green-600">–æ–Ω–ª–∞–π–Ω</div>
                    </div>
                  </div>

                  <div className="flex-1 p-4 overflow-y-auto space-y-4">
                    <div className="flex justify-start">
                      <div className="bg-white rounded-2xl rounded-tl-none px-4 py-2 max-w-xs shadow-sm">
                        <p>–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?</p>
                        <span className="text-xs text-gray-500">14:30</span>
                      </div>
                    </div>
                    <div className="flex justify-end">
                      <div className="bg-blue-600 text-white rounded-2xl rounded-tr-none px-4 py-2 max-w-xs">
                        <p>–û—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ! –ê —É —Ç–µ–±—è?</p>
                        <span className="text-xs text-blue-100">14:31</span>
                      </div>
                    </div>
                  </div>

                  <div className="p-4 bg-white border-t">
                    <div className="flex items-center gap-2">
                      <Button variant="ghost" size="icon">
                        <Icon name="Paperclip" size={20} />
                      </Button>
                      <Input placeholder="–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ..." className="flex-1" />
                      <Button size="icon" className="bg-blue-600 hover:bg-blue-700">
                        <Icon name="Send" size={20} />
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'ads' && (
              <div className="max-w-7xl mx-auto p-4">
                <div className="mb-6 flex items-center justify-between">
                  <h1 className="text-2xl font-bold text-gray-900">–û–±—ä—è–≤–ª–µ–Ω–∏—è</h1>
                  <Button className="bg-blue-600 hover:bg-blue-700">
                    <Icon name="Plus" size={20} className="mr-2" />
                    –ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                  </Button>
                </div>

                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
                  {mockAds.map((ad) => (
                    <Card key={ad.id} className="hover:shadow-lg transition-shadow cursor-pointer">
                      <CardContent className="p-0">
                        <div className="h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center text-6xl rounded-t-lg">
                          {ad.image}
                        </div>
                        <div className="p-4">
                          <h3 className="font-semibold text-lg mb-2 line-clamp-1">{ad.title}</h3>
                          <div className="text-2xl font-bold text-blue-600 mb-2">{ad.price}</div>
                          <div className="flex items-center justify-between text-sm text-gray-600">
                            <div className="flex items-center gap-1">
                              <Icon name="MapPin" size={14} />
                              {ad.location}
                            </div>
                            <span>{ad.time}</span>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </div>
            )}

            {activeTab === 'taxi' && (
              <div className="max-w-4xl mx-auto p-4">
                <Card>
                  <CardContent className="p-6">
                    <h2 className="text-2xl font-bold mb-6">–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏</h2>
                    
                    <div className="space-y-4 mb-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">–û—Ç–∫—É–¥–∞</label>
                        <div className="relative">
                          <Icon name="MapPin" size={20} className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" />
                          <Input placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å..." className="pl-10" />
                        </div>
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">–ö—É–¥–∞</label>
                        <div className="relative">
                          <Icon name="MapPin" size={20} className="absolute left-3 top-1/2 -translate-y-1/2 text-blue-600" />
                          <Input placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å..." className="pl-10" />
                        </div>
                      </div>
                    </div>

                    <div className="grid md:grid-cols-3 gap-4 mb-6">
                      {[
                        { name: '–≠–∫–æ–Ω–æ–º', price: '450 ‚ÇΩ', time: '3 –º–∏–Ω', icon: 'üöó' },
                        { name: '–ö–æ–º—Ñ–æ—Ä—Ç', price: '650 ‚ÇΩ', time: '5 –º–∏–Ω', icon: 'üöô' },
                        { name: '–ë–∏–∑–Ω–µ—Å', price: '1200 ‚ÇΩ', time: '7 –º–∏–Ω', icon: 'üöò' },
                      ].map((tariff) => (
                        <div
                          key={tariff.name}
                          className="border-2 border-gray-200 rounded-xl p-4 hover:border-blue-500 cursor-pointer transition-all"
                        >
                          <div className="text-3xl mb-2">{tariff.icon}</div>
                          <div className="font-semibold mb-1">{tariff.name}</div>
                          <div className="text-lg font-bold text-blue-600 mb-1">{tariff.price}</div>
                          <div className="text-sm text-gray-600">–ü–æ–¥–∞—á–∞: {tariff.time}</div>
                        </div>
                      ))}
                    </div>

                    <Button className="w-full bg-blue-600 hover:bg-blue-700 py-6 text-lg font-semibold">
                      –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏
                    </Button>
                  </CardContent>
                </Card>
              </div>
            )}

            {activeTab === 'music' && (
              <div className="max-w-5xl mx-auto p-4 space-y-4">
                <div className="bg-gradient-to-r from-purple-600 to-pink-600 rounded-2xl p-8 text-white">
                  <h2 className="text-3xl font-bold mb-2">–ú—É–∑—ã–∫–∞</h2>
                  <p className="text-purple-100">–°–ª—É—à–∞–π—Ç–µ –ª—é–±–∏–º—ã–µ —Ç—Ä–µ–∫–∏ –∏ –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –Ω–æ–≤—É—é –º—É–∑—ã–∫—É</p>
                </div>

                <div className="grid md:grid-cols-4 gap-4">
                  {[1, 2, 3, 4, 5, 6, 7, 8].map((track) => (
                    <Card key={track} className="hover:shadow-lg transition-shadow cursor-pointer">
                      <CardContent className="p-4">
                        <div className="aspect-square bg-gradient-to-br from-purple-400 to-pink-400 rounded-lg mb-3 flex items-center justify-center">
                          <Icon name="Music" size={40} className="text-white" />
                        </div>
                        <h3 className="font-semibold mb-1 line-clamp-1">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ {track}</h3>
                        <p className="text-sm text-gray-600 line-clamp-1">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</p>
                      </CardContent>
                    </Card>
                  ))}
                </div>

                <Card className="sticky bottom-0">
                  <CardContent className="p-4">
                    <div className="flex items-center gap-4">
                      <div className="w-12 h-12 bg-gradient-to-br from-purple-400 to-pink-400 rounded-lg flex items-center justify-center">
                        <Icon name="Music" size={24} className="text-white" />
                      </div>
                      <div className="flex-1">
                        <div className="font-semibold">–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç</div>
                        <div className="text-sm text-gray-600">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å ‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ</div>
                      </div>
                      <div className="flex items-center gap-2">
                        <Button variant="ghost" size="icon">
                          <Icon name="SkipBack" size={20} />
                        </Button>
                        <Button size="icon" className="bg-blue-600 hover:bg-blue-700">
                          <Icon name="Play" size={20} />
                        </Button>
                        <Button variant="ghost" size="icon">
                          <Icon name="SkipForward" size={20} />
                        </Button>
                        <Button variant="ghost" size="icon">
                          <Icon name="Volume2" size={20} />
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            )}
          </main>
        </div>

        <nav className="md:hidden fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 z-40">
          <div className="flex justify-around py-2">
            {[
              { id: 'feed', icon: 'Home', label: '–õ–µ–Ω—Ç–∞' },
              { id: 'messages', icon: 'MessageCircle', label: '–ß–∞—Ç—ã', badge: 5 },
              { id: 'ads', icon: 'ShoppingBag', label: '–¢–æ–≤–∞—Ä—ã' },
              { id: 'taxi', icon: 'Car', label: '–¢–∞–∫—Å–∏' },
              { id: 'music', icon: 'Music', label: '–ú—É–∑—ã–∫–∞' },
            ].map((item) => (
              <button
                key={item.id}
                onClick={() => setActiveTab(item.id as any)}
                className={`flex flex-col items-center gap-1 px-3 py-2 rounded-lg relative ${
                  activeTab === item.id ? 'text-blue-600' : 'text-gray-600'
                }`}
              >
                <Icon name={item.icon as any} size={24} />
                <span className="text-xs">{item.label}</span>
                {item.badge && (
                  <span className="absolute top-0 right-0 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                    {item.badge}
                  </span>
                )}
              </button>
            ))}
          </div>
        </nav>
      </div>
    </>
  );
};

export default NewPage;
